version: '3.8'

services:
  # XDP MCP Server with WebSocket support
  xdp-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xdp-mcp-server
    ports:
      - "9099:9099"
    environment:
      - NODE_ENV=development
      - PORT=9099
      - LOG_LEVEL=debug
      - XDP_BASE_URL=${XDP_BASE_URL:-https://dev-api.xdp.acceldata.dev}
      - XDP_ACCESS_KEY=${XDP_ACCESS_KEY}
      - XDP_SECRET_KEY=${XDP_SECRET_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    volumes:
      - ./logs:/app/logs

  # Optional: Bolt.diy container for testing integration
  # Uncomment if you want to test with Bolt.diy in container
  # bolt-diy:
  #   build:
  #     context: ../bolt.diy
  #     dockerfile: Dockerfile
  #   container_name: bolt-diy
  #   ports:
  #     - "5173:5173"
  #   environment:
  #     - MCP_SERVER_URL=ws://xdp-mcp-server:9099/ws
  #     - MCP_API_URL=http://xdp-mcp-server:9099/api
  #   depends_on:
  #     xdp-mcp-server:
  #       condition: service_healthy
  #   networks:
  #     - mcp-network

  # Optional: Mock XDP API for testing without real backend
  mock-xdp-api:
    image: mockserver/mockserver:latest
    container_name: mock-xdp-api
    ports:
      - "1080:1080"
    environment:
      - MOCKSERVER_LOG_LEVEL=INFO
    networks:
      - mcp-network
    profiles:
      - mock

  # WebSocket test client for debugging
  ws-test-client:
    image: node:20-alpine
    container_name: ws-test-client
    command: sleep infinity
    working_dir: /app
    volumes:
      - ./test:/app
      - ./src:/src
    networks:
      - mcp-network
    profiles:
      - test

networks:
  mcp-network:
    driver: bridge

volumes:
  logs: